{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\vortrex-presale\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\nimport { Contract, BrowserProvider, parseEther } from 'ethers';\nimport axios from 'axios';\nimport HomePage from './components/HomePage';\nimport PresalePage from './components/PresalePage';\nimport TokenInfoPage from './components/TokenInfoPage';\nimport RoadmapPage from './components/RoadmapPage';\nimport ContactPage from './components/ContactPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [bnbPrice, setBnbPrice] = useState(null);\n  const [amount, setAmount] = useState(1);\n  const [totalTokens, setTotalTokens] = useState(60000);\n  const [isConnected, setIsConnected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  useEffect(() => {\n    axios.get('https://api.coingecko.com/api/v3/simple/price?ids=binancecoin&vs_currencies=usd').then(res => setBnbPrice(res.data.binancecoin.usd)).catch(err => console.error(err));\n  }, []);\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      const provider = new BrowserProvider(window.ethereum);\n      const accounts = await provider.send('eth_requestAccounts', []);\n      setWalletAddress(accounts[0]);\n      setIsConnected(true);\n    } else alert('Install MetaMask');\n  };\n  const handleAmountChange = e => {\n    const val = e.target.value;\n    setAmount(val);\n    setTotalTokens(val * 60000);\n  };\n  const buyTokens = async () => {\n    if (!isConnected) return alert('Connect wallet first');\n    const totalBNB = bnbPrice * amount / 60;\n    const provider = new BrowserProvider(window.ethereum);\n    const signer = await provider.getSigner();\n    const tokenAddress = \"YOUR_TOKEN_CONTRACT_ADDRESS\";\n    const tokenAbi = ['function buyTokens() external payable'];\n    const tokenContract = new Contract(tokenAddress, tokenAbi, signer);\n    try {\n      const tx = await tokenContract.buyTokens({\n        value: parseEther(totalBNB.toString())\n      });\n      await tx.wait();\n      alert('Success!');\n    } catch {\n      alert('Failed!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PresalePage, {\n      isConnected: isConnected,\n      connectWallet: connectWallet,\n      walletAddress: walletAddress,\n      amount: amount,\n      handleAmountChange: handleAmountChange,\n      totalTokens: totalTokens,\n      bnbPrice: bnbPrice,\n      buyTokens: buyTokens\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TokenInfoPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoadmapPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4rkDEYprqG4cE74rk27WMTErPI8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Contract","BrowserProvider","parseEther","axios","HomePage","PresalePage","TokenInfoPage","RoadmapPage","ContactPage","jsxDEV","_jsxDEV","App","_s","bnbPrice","setBnbPrice","amount","setAmount","totalTokens","setTotalTokens","isConnected","setIsConnected","walletAddress","setWalletAddress","get","then","res","data","binancecoin","usd","catch","err","console","error","connectWallet","window","ethereum","provider","accounts","send","alert","handleAmountChange","e","val","target","value","buyTokens","totalBNB","signer","getSigner","tokenAddress","tokenAbi","tokenContract","tx","toString","wait","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/vortrex-presale/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './index.css';\r\nimport { Contract, BrowserProvider, parseEther } from 'ethers';\r\nimport axios from 'axios';\r\nimport HomePage from './components/HomePage';\r\nimport PresalePage from './components/PresalePage';\r\nimport TokenInfoPage from './components/TokenInfoPage';\r\nimport RoadmapPage from './components/RoadmapPage';\r\nimport ContactPage from './components/ContactPage';\r\n\r\nconst App = () => {\r\n  const [bnbPrice, setBnbPrice] = useState(null);\r\n  const [amount, setAmount] = useState(1);\r\n  const [totalTokens, setTotalTokens] = useState(60000);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios.get('https://api.coingecko.com/api/v3/simple/price?ids=binancecoin&vs_currencies=usd')\r\n      .then(res => setBnbPrice(res.data.binancecoin.usd))\r\n      .catch(err => console.error(err));\r\n  }, []);\r\n\r\n  const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n      const provider = new BrowserProvider(window.ethereum);\r\n      const accounts = await provider.send('eth_requestAccounts', []);\r\n      setWalletAddress(accounts[0]);\r\n      setIsConnected(true);\r\n    } else alert('Install MetaMask');\r\n  };\r\n\r\n  const handleAmountChange = (e) => {\r\n    const val = e.target.value;\r\n    setAmount(val);\r\n    setTotalTokens(val * 60000);\r\n  };\r\n\r\n  const buyTokens = async () => {\r\n    if (!isConnected) return alert('Connect wallet first');\r\n    const totalBNB = (bnbPrice * amount) / 60;\r\n    const provider = new BrowserProvider(window.ethereum);\r\n    const signer = await provider.getSigner();\r\n    const tokenAddress = \"YOUR_TOKEN_CONTRACT_ADDRESS\";\r\n    const tokenAbi = ['function buyTokens() external payable'];\r\n    const tokenContract = new Contract(tokenAddress, tokenAbi, signer);\r\n\r\n    try {\r\n      const tx = await tokenContract.buyTokens({ value: parseEther(totalBNB.toString()) });\r\n      await tx.wait();\r\n      alert('Success!');\r\n    } catch {\r\n      alert('Failed!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <HomePage />\r\n      <PresalePage \r\n        isConnected={isConnected}\r\n        connectWallet={connectWallet}\r\n        walletAddress={walletAddress}\r\n        amount={amount}\r\n        handleAmountChange={handleAmountChange}\r\n        totalTokens={totalTokens}\r\n        bnbPrice={bnbPrice}\r\n        buyTokens={buyTokens}\r\n      />\r\n      <TokenInfoPage />\r\n      <RoadmapPage />\r\n      <ContactPage />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}